#!/usr/bin/env bash

set -ue

CREDENTIALS_DIRECTORY=${CREDENTIALS_DIRECTORY:-/credentials}

# If we have a credentials directory, we assume that it contains files with git credentials for different sites and
# import them into the git credential cache.
if [ -d "$CREDENTIALS_DIRECTORY" ]; then
    # We need to use global git configuration -- even though our working directory is a git repository, it's not the git
    # repository of the library being installed. However, there is quite a big chance that the HOME environment variable
    # is not set or being "/", leading to errors from git, being unable to write to the root directory.
    export HOME=$(mktemp -d)
    git config --global credential.helper cache
    for cred in "$CREDENTIALS_DIRECTORY"/*; do
        git credential-cache store < "$cred"
    done
fi

find . -iname 'jsonnetfile.json' | while read -r jsonnet; do
    pushd "$(dirname "$jsonnet")" >/dev/null
    jb install
    popd >/dev/null
done

find . -iname 'chartfile.yaml' | while read -r chartfile; do
    pushd "$(dirname "$chartfile")" >/dev/null
    # We need a home directory set for helm to be able to write its caches somewhere.
    HOME=/tmp/helm/ tk tool charts vendor
    popd >/dev/null
done
